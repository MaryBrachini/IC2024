@html.extend('layout', function(model) {
@html.block('content', function(model) {

<main>
    <div class="container-fluid px-4">
        <h1 class="mt-2">@model.title</h1>
        <ol class="breadcrumb mb-2">
            <li class="breadcrumb-item active">@model.title</li>
        </ol>
        <div class="row">
            <div class="col-xl-12">
                <div class="card-body">
                    <div class="col-xl-5">
                        <form id="form">
                            <div class="mb-1" style="display: none">
                                <input type="text" name="unidBasicaSaudeID" value="@model.data.unidBasicaSaudeID" class="form-control" id="id">
                            </div>
                            <div class="mb-1">
                                <label for="nomeUBS" class="form-label">Nome da UBS</label>
                                <input type="text" name="nomeUBS" value="@model.data.nomeUBS" class="form-control" id="nomeUBS" @(model.oper=='v' ? 'disabled' : '')>
                            </div>
                            <div class="mb-1">
                                <label for="codigoUBS" class="form-label">Código da UBS</label>
                                <input type="text" name="codigoUBS" value="@model.data.codigoUBS" class="form-control" id="codigoUBS" @(model.oper=='v' ? 'disabled' : '')>
                            </div>
                            <div class="mb-1">
                                <label for="bairroIDFK" class="form-label">Bairro</label>
                                <select class="form-select" aria-label="Default select example" id="bairroIDFK" name="bairroIDFK" @(model.oper=='v' ? 'disabled' : '')>
                                    @model.bairro.forEach(function(item) {
                                    @if(model.data.bairroIDFK === item.bairroIDFK) {
                                    <option value="@item.bairroIDFK" selected>@item.nomeBairro</option>
                                    } else {
                                    <option value="@item.bairroIDFK">@item.nomeBairro</option>
                                    }
                                    });
                                </select>
                            </div>
                            @if (model.oper=="c") {
                            <button type="submit" class="btn btn-success me-2">Salvar</button>
                            }
                        </form>
                        <div>
                            @if (model.oper=="vu") {
                            <button type="button" class="btn btn-warning me-2 mb-3" onclick="alteraRegistro()">Salvar Alteração</button>
                            }
                            @if (model.oper=="v") {
                            <button type="button" class="btn btn-warning me-2 mb-3" onclick="window.open('/UBS/viewUBS/' + $('#id').val() + '/vu', '_self')">Alterar</button>
                            }
                            @if (model.oper=="v") {
                            <button type="button" class="btn btn-danger mb-3" onclick="deleteUBS()">Remover</button>
                            }
                        </div>
                        <button type="button" class="btn btn-primary" onclick="window.location.href = '/UBS'">Fechar sem salvar</button>                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

})
})


<script>
    async function alteraRegistro() {
        try {
            const resp = await axios.post("/UBS/viewUBS", {
                unidBasicaSaudeID: $("#id").val(),
                nomeUBS: $("#nomeUBS").val(),
                codigoUBS: $("#codigoUBS").val(),
                bairroIDFK: $("#bairroIDFK").val()
            }, {
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (resp.data.status === "ok") {
                alert("Registro alterado com sucesso!");
            } else {
                alert("Houve erro ao alterar os dados da UBS!");
            }
        } catch (error) {
            console.error("Erro ao alterar registro:", error);
            alert("Houve um erro ao alterar o registro. Verifique o console para mais detalhes.");
        }
    }

    async function deleteUBS() {
        try {
            const resp = await axios.post("/UBS/DeleteUBS", {
                unidBasicaSaudeID: $("#id").val()
            }, {
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (resp.data.status === "ok") {
                alert("UBS removida com sucesso!");
                window.open("/UBS", "_self");
            } else {
                alert("Houve erro ao remover os dados da UBS!");
            }
        } catch (error) {
            console.error("Erro ao remover UBS:", error);
            alert("Houve um erro ao remover a UBS. Verifique o console para mais detalhes.");
        }
    }

    function testeFormData() {
        const form = document.getElementById("form");
        const formData = new FormData(form);
        // Você pode manipular o formData aqui, se necessário
    }
</script>

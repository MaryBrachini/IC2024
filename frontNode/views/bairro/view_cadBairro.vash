@html.extend('layout', function(model){
@html.block('content', function(model){

<main>
  <div class="container-fluid px-4">
    <h1 class="mt-2">@model.title</h1>
    <ol class="breadcrumb mb-2">
      <li class="breadcrumb-item active">@model.title</li>
    </ol>
    <div class="row">
      <div class="col-xl-12">
        <div class="card-header"></div>

        <div class="card-body">
          <div class="col-sm-6 col-xxl-12">
            <form id="form">
              <div class="mb-1" style="display: none">
                <input type="number" name="bairroid" class="form-control" id="bairroid" />
              </div>
              <div class="mb-1 row ">
                <label for="codigobairro" class="col-sm-2 col-xxl-1 col-form-label required">Código do bairro:</label>
                <div class="col-sm-4 col-xxl-2">
                  <input type="text" name="codigobairro" class="form-control-plaintext" id="codigobairro" maxlength="10" required readonly />
                </div>

                <label for="nomebairro" class="col-sm-2 col-xxl-1 col-form-label required">Nome do Bairro:</label>
                <div class="col-sm-4 col-xxl-3">
                  <input type="text" name="nomebairro" class="form-control-plaintext" id="nomebairro" maxlength="50" required readonly />
                </div>
              </div>
            </form>
          </div>
          <div class="">
            <button type="button" class="btn btn-success me-2" onclick="btnSalvar()" id="btnSalvar" hidden>
              Salvar
            </button>

            <button type="button" class="btn btn-warning me-2" onclick="btnAlterar()" id="btnAlterar" hidden>
              Alterar
            </button>

            <button type="button" class="btn btn-warning me-2" onclick="btnSalvarAlteracao()" id="btnSalvarAlteracao" hidden>
              Salvar Alteração
            </button>

            <button type="button" class="btn btn-info me-2" onclick="btnCancelarAlteracao()" id="btnCancelarAlteracao" hidden>
              Cancelar Alteração
            </button>

            <button type="" class="btn btn-danger" onclick="btnRemover()" id="btnRemover" hidden>
              Remover
            </button>

            <button type="button" class="btn btn-primary" onclick="window.location.href = '/bairro'" id="btnFechar">
              Fechar
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</main>

}) })

<script>
  const form = document.getElementById("form");
  var oper = "@model.oper";

  window.onload = limpaForm();

  //@ Limpa o conteúdo dos campos do formulário
  async function limpaForm() {

    $("#form").each(function() {
      this.reset();
    });

    // Mostra os botões de acordo com o tipo da operação
    if (oper == "c") {
      $("#btnSalvar").prop("hidden", false);
      habilitaForm();
    }

    if (oper == "u") {
      $("#btnAlterar").prop("hidden", false);
    }

    //Necessário para buscar dados de acordo com o ID para serem alterados
    if (oper == "u") {
      idBusca = "@model.idBusca";
      await getDados(idBusca);
    }

    //Coloca o Bairro no primeiro campo do formulário
    $("#codigobairro").focus();
  }

  //@ Busca os dados de acordo com o ID para serem alterados
  async function getDados(idBuscaPar) {
    console.log("[getDados] idBusca", idBuscaPar);

    try {
      const resp = await axios.post(
        "/bairro/getDados", {
          idBusca: idBuscaPar
        }, {
          headers: {
            "Content-Type": "application/json",
          },
        }
      );
      if (resp.data.status == "ok") {
        $("#bairroid").val(resp.data.registro.bairroid);
        $("#codigobairro").val(resp.data.registro.codigobairro);
        $("#nomebairro").val(resp.data.registro.nomebairro);
      } else {
        alert("Houve erro ao buscar os dados dos bairro!");
      }
    } catch (error) {
      alert("[view_cadBairro|getDados]Ocorreu um erro inesperado!" + error);
    }
  }

  //@ Valida o formulário antes de salvá-lo
  function validaForm(formDataPar) {
    var validado = true;
    $("#form input, #form select").each(function(index) {
      var input = $(this);
      if (
        input.attr("type") == "text" &&
        input.prop("required") &&
        String(input.val()).length == 0
      ) {
        alert("Campo obrigatório");
        $(input).focus();
        validado = false;
        return false;
      }
    });

    formDataPar.set("removido", false);

    return validado;
  }

  //@ Salva os dados
  async function btnSalvar() {
    const formData = new FormData(form);

    const validado = validaForm(formData);
    if (!validado) {
      return;
    }

    try {
      resp = await axios.post("/bairro/insertBairro", formData, {
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (resp.data.status == "ok") {
        alert(resp.data.mensagem);
        limpaForm();
      } else {
        alert("Houve um erro: " + resp.data.mensagem);
      }
    } catch (error) {
      alert("[view_cadBairro|btnSalvar]Ocorreu um erro inesperado!" + error);
    }
  }

  //@ Habilita form para alteração
  function habilitaForm() {
    $("#codigobairro").prop("class", "form-control");
    $("#codigobairro").prop("readonly", false);

    $("#nomebairro").prop("class", "form-control");
    $("#nomebairro").prop("readonly", false);
  }

  //@ Habilita a alteração
  async function btnAlterar() {
    $("#btnSalvarAlteracao").prop("hidden", false);
    $("#btnCancelarAlteracao").prop("hidden", false);
    $("#btnRemover").prop("hidden", false);
    $("#btnAlterar").prop("hidden", true);

    habilitaForm();
  }

  //@ Salva a alteração
  //@ console.log("[view_cadBairro|btnSalvarAlteracao] :", )
  async function btnSalvarAlteracao() {
    const formData = new FormData(form);
    const validado = validaForm(formData);
    if (!validado) {
      return;
    }

    try {
      resp = await axios.post("/bairro/updateBairro", formData, {
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (resp.data.status == "ok") {
        alert(resp.data.mensagem);
        window.open("/bairro/openBairroUpdate/" + String($("#bairroid").val()), "_self");
      } else {
        alert("Houve um erro: " + resp.data.mensagem);
      }
    } catch (error) {
      alert("[view_cadBairro|btnSalvarAlteracao]Ocorreu um erro inesperado!" + error);
    }


  }

  //@ Cancela a alteração
  //@ console.log("[view_cadBairro|btnCancelarAlteracao] Valor do id", $("#bairroid").val());    
  async function btnCancelarAlteracao() {
    window.open("/bairro/openBairroUpdate/" + String($("#bairroid").val()), "_self");
  }

  //@ Remove bairro
  //@ console.log("[view_cadBairro|btnSalvarAlteracao] :", )
  async function btnRemover() { 

    var confirma = confirm("Deseja realmente remover o registro?");
    if (!confirma) {
      return; //@ Se o usuário selecionar Cancela, o registro não é removido.
    }
    const formData = new FormData(form);

    try {
      resp = await axios.post("/bairro/deleteBairro", {
        bairroid: formData.get("bairroid")
      }, {
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (resp.data.status == "ok") {
        alert(resp.data.mensagem);
        window.open("/bairro", "_self");
      } else {
        alert("Houve um erro: " + resp.data.mensagem);
      }
    } catch (error) {
      alert("[view_cadBairro|btnSalvarAlteracao]Ocorreu um erro inesperado!" + error);
    }
  }


  $(function() {
    $("#rendafamiliar").maskMoney();
  });

  async function deleteUBS(unidBasicaSaudeIDPar) {
    resp = await axios.post(
      "/UBS/DeleteUBS", {
        id: $("#id").val(),
      }, {
        headers: {
          "Content-Type": "application/json",
        },
      }
    );

    if (resp.data.status == "ok") {
      alert("Aluno removido com sucesso!");
      window.open("/UBS", "_self");
    } else {
      alert("Houve erro ao remover os dados dos UBS!");
    }
  }

  async function testeFormData() {
    const form = document.getElementById("form");
    const formData = new FormData(form);

    console.log("unidBasicaSaudeID: ", formData.get("unidBasicaSaudeID"));
  }
</script>

<style>
  .required:after {
    content: " *";
    color: red;
  }
</style>
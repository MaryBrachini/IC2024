@html.extend('layout', function(model) {
    @html.block('content', function(model) {
        <main style="text-align: center;">
            <div class="tabbable tabs-left" style="margin: 0 auto; width: 80%;">
                <div class="tab-content" style="padding: 20px;">
                    <h2>Relatório de Ocorrências</h2>
                    <br>

                    <form method="post" action="">
                        <div class="row mb-1" style="padding-top: 5px;">
                            <div class="col-4" style="display: inline-block;">
                                <label for="inputDataInicio">Data Inicial:</label>
                                <input type="date" name="dataInicio" required />
                            </div>
                            <div class="col-4" style="display: inline-block;">
                                <label for="inputDataFim">Data Final:</label>
                                <input type="date" name="dataFim" required />
                            </div>
                            <div class="col-4" style="display: inline-block;">
                                <button id="gerarRelatorio" type="submit" class="btn btn-primary">Gerar Relatório</button>
                            </div>
                        </div>
                    </form>

                    <h4 style="padding-top: 20px;">Ocorrências no Período</h4>

                    <table class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Últimos 15 Dias</th>
                                <th>Último Mês</th>
                                <th>Últimos 6 Meses</th>
                                <th>Último Ano</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@model.totalOcorrencias.last15Days</td>
                                <td>@model.totalOcorrencias.lastMonth</td>
                                <td>@model.totalOcorrencias.last6Months</td>
                                <td>@model.totalOcorrencias.lastYear</td>
                            </tr>
                        </tbody>
                    </table>

                    <h4 style="padding-top: 20px;">Contagem de Ocorrências por Categoria</h4>
                    
                    <div class="row mb-1" style="padding-top: 5px;">
                        <@* div class="col-4">
                            <h5>Epidemia</h5>
                            <table class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Epidemia</th>
                                        <th>Quantidade</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @model.contagemEpidemiaArray.forEach(function(ocorrencia) {
                                        <tr>
                                            <td>@ocorrencia.epidemia</td>
                                            <td>@ocorrencia.epidemiacount</td>
                                        </tr>
                                    })
                                </tbody>
                            </table>
                        </div> *@

                        <div class="col-4">
                            <h5>Unidade Básica de Saúde</h5>
                            <table class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Uni. Básica de Saúde</th>
                                        <th>Quantidade</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @model.contagemPorUBSArray.forEach(function(ocorrencia) {
                                        <tr>
                                            <td>@ocorrencia.ubs</td>
                                            <td>@ocorrencia.ubscount</td>
                                        </tr>
                                    })
                                </tbody>
                            </table>
                        </div>
                    
                        <div class="col-4">
                            <h5>Logradouro</h5>
                            <table class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Logradouro</th>
                                        <th>Quantidade</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @model.contagemPorLogradouroArray.forEach(function(ocorrencia) {
                                        <tr>
                                            <td>@ocorrencia.logradouro</td>
                                            <td>@ocorrencia.logradourocount</td>
                                        </tr>
                                    })
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="row mb-1" style="padding-top: 5px;">
                        <div class="col-6">
                            <h5>Bairro</h5>
                            <table class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Bairro</th>
                                        <th>Quantidade</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @model.contagemPorBairroArray.forEach(function(ocorrencia) {
                                        <tr>
                                            <td>@ocorrencia.bairro</td>
                                            <td>@ocorrencia.bairrocount</td>
                                        </tr>
                                    })
                                </tbody>
                            </table>
                        </div>

                        <div class="col-6">
                            <h5>Data da Ocorrência</h5>
                            <table class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Data</th>
                                        <th>Quantidade</th>
                                    </tr>
                                </thead>
                                <tbody>                            
                                    @model.contagemPorDataArray.forEach(function(ocorrencia) {                           
                                        <tr>
                                            <td>@ocorrencia.dataOcorrencia</td>
                                            <td>@ocorrencia.dataOcorrenciacount</td>
                                        </tr>
                                    })
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div style="padding-top: 20px;">
                        <h4>Gráficos de Ocorrências</h4>
                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos das Epidemias</h5>
                            <div class="col-6">
                                <canvas id="epibar" width="400" height="200"></canvas>                         
                            </div>

                             <div class="col-6">
                                <canvas id="epipie" width="400" height="200"></canvas>                         
                            </div>
                        </div>

                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos das Unidade Básica de Saúde</h5>
                            <div class="col-6">
                                <canvas id="ubsbar" width="400" height="200"></canvas>                         
                            </div>

                             <div class="col-6">
                                <canvas id="ubspie" width="400" height="200"></canvas>                         
                            </div>
                        </div>

                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos dos Logradouros</h5>
                            <div class="col-6">
                                <canvas id="logbar" width="400" height="200"></canvas>                         
                            </div>

                             <div class="col-6">
                                <canvas id="logpie" width="400" height="200"></canvas>                         
                            </div>
                        </div>

                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos dos Bairros</h5>
                            <div class="col-6">
                                <canvas id="bairrobar" width="400" height="200"></canvas>                         
                            </div>

                             <div class="col-6">
                                <canvas id="bairropie" width="400" height="200"></canvas>                         
                            </div>
                        </div>

                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos de Data da Ocorrência</h5>
                            <div class="col-6">
                                <canvas id="databar" width="400" height="200"></canvas>                         
                            </div>

                             <div class="col-6">
                                <canvas id="datapie" width="400" height="200"></canvas>                         
                            </div>
                        </div>
                    </div>
                    
                    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

                        <script>

                            let labelsepi = '';
                            let dataepi = '';

                            let labelsubs = '';
                            let dataubs = '';

                            let labelslog= '';
                            let datalog= '';

                            let labelsbairro= '';
                            let databairro= '';

                            let labelsdata= '';
                            let datadata= '';


                            async function fetchDataAndCreateCharts() {

                                labelsepi = '';
                                dataepi = '';

                                labelsubs = '';
                                dataubs = '';

                                labelslog= '';
                                datalog= '';

                                labelsbairro= '';
                                databairro= '';

                                labelsdata= '';
                                datadata= '';


                            try {
                                const response = await axios.get('http://localhost:40000/relatorio/GetData');
                                console.log("response.data",response.data);


                                const ocorrencias = response.data.regReturn;

                                // Extrair dados específicos para cada gráfico

                                const epidemias = ocorrencias.epidemia;
                                const ubss = ocorrencias.ubs;
                                const logradouros = ocorrencias.logradouro;
                                const bairros = ocorrencias.bairro;
                                const dataOcorrencias = ocorrencias.dataOcorrencia;
        
                                if (ocorrencias && Array.isArray(ocorrencias.epidemia)) {
                                    labelsepi = epidemias.map(function(ocorrencia) { 
                                        return ocorrencia.epidemia; 
                                    });
                                    
                                    dataepi = epidemias.map(function(ocorrencia) { 
                                    return ocorrencia.epidemiacount; 
                                    });
                                    console.log("labelsepi",labelsepi);
                                    console.log("dataepi",dataepi);
                                
                                } else {
                                    console.error('Erro: epidemia não é um array ou está vazio', epidemias);
                                }                             


                                if (ocorrencias && Array.isArray(ocorrencias.ubs)) {
                                labelsubs = ubss.map(function(ocorrencia) { 
                                    return ocorrencia.ubs; 
                                });
                                dataubs = ubss.map(function(ocorrencia) { 
                                    return ocorrencia.ubscount; 
                                });
                                } else {
                                    console.error('Erro: epidemia não é um array ou está vazio', ubss);
                                } 

                                if (ocorrencias && Array.isArray(ocorrencias.logradouro)) {
                                 labelslog = logradouros.map(function(ocorrencia) { 
                                    return ocorrencia.logradouro; 
                                });
                                 datalog = logradouros.map(function(ocorrencia) { 
                                    return ocorrencia.logradourocount; 
                                });
                                } else {
                                    console.error('Erro: epidemia não é um array ou está vazio', logradouros);
                                } 


                                if (ocorrencias && Array.isArray(ocorrencias.bairro)) {
                                labelsbairro = bairros.map(function(ocorrencia) { 
                                    return ocorrencia.bairro; 
                                });
                                 databairro = bairros.map(function(ocorrencia) { 
                                    return ocorrencia.bairrocount; 
                                });
                                } else {
                                    console.error('Erro: epidemia não é um array ou está vazio', bairros);
                                } 


                                if (ocorrencias && Array.isArray(ocorrencias.dataOcorrencia)) {
                                labelsdata = dataOcorrencias.map(function(ocorrencia) { 
                                    return ocorrencia.dataOcorrencia; 
                                });
                                 datadata = dataOcorrencias.map(function(ocorrencia) { 
                                    return ocorrencia.dataOcorrenciacount; 
                                });
                                } else {
                                    console.error('Erro: epidemia não é um array ou está vazio', dataOcorrencias);
                                } 

                                // Função para criar gráfico de barras
                                function createBarChart(ctx, labels, data, label) {
                                    return new Chart(ctx, {
                                        type: 'bar',
                                        data: {
                                            labels: labels,
                                            datasets: [{
                                                label: label,
                                                data: data,
                                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                                borderColor: 'rgba(75, 192, 192, 1)',
                                                borderWidth: 1
                                            }]
                                        },
                                        options: {
                                            responsive: true,
                                            scales: {
                                                y: {
                                                    beginAtZero: true,
                                                    ticks: {
                                                        callback: function(value) {
                                                            return Math.round(value);
                                                        },
                                                        stepSize: 1
                                                    }
                                                }
                                            }
                                        }
                                    });
                                }

                                // Função para criar gráfico de pizza
                                function createPieChart(ctx, labels, data, label) {
                                    return new Chart(ctx, {
                                        type: 'pie',
                                        data: {
                                            labels: labels,
                                            datasets: [{
                                                label: label,
                                                data: data,
                                                backgroundColor: [
                                                    'rgba(255, 99, 132, 0.2)',
                                                    'rgba(54, 162, 235, 0.2)',
                                                    'rgba(255, 206, 86, 0.2)',
                                                    'rgba(75, 192, 192, 0.2)',
                                                    'rgba(153, 102, 255, 0.2)',
                                                    'rgba(255, 159, 64, 0.2)',
                                                    'rgba(201, 203, 207, 0.2)'
                                                ],
                                                borderColor: [
                                                    'rgba(255, 99, 132, 1)',
                                                    'rgba(54, 162, 235, 1)',
                                                    'rgba(255, 206, 86, 1)',
                                                    'rgba(75, 192, 192, 1)',
                                                    'rgba(153, 102, 255, 1)',
                                                    'rgba(255, 159, 64, 1)',
                                                    'rgba(201, 203, 207, 1)'
                                                ],
                                                borderWidth: 1
                                            }]
                                        },
                                        options: {
                                            responsive: true,
                                            plugins: {
                                                legend: {
                                                    position: 'top',
                                                },
                                                tooltip: {
                                                    callbacks: {
                                                        label: function(context) {
                                                            let label = context.label || '';
                                                            let value = context.raw || 0;
                                                            return `${label}: ${Math.round(value)}`;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    });
                                }

                                // Criação dos gráficos de barras
                                createBarChart(document.getElementById('epibar').getContext('2d'), labelsepi, dataepi, 'Ocorrências de Epidemias');
                                createBarChart(document.getElementById('ubsbar').getContext('2d'), labelsubs, dataubs, 'Ocorrências por UBS');
                                createBarChart(document.getElementById('logbar').getContext('2d'), labelslog, datalog, 'Ocorrências por Logradouro');
                                createBarChart(document.getElementById('bairrobar').getContext('2d'), labelsbairro, databairro, 'Ocorrências por Bairro');
                                createBarChart(document.getElementById('databar').getContext('2d'), labelsdata, datadata, 'Ocorrências por Data');

                                // Criação dos gráficos de pizza
                                createPieChart(document.getElementById('epipie').getContext('2d'), labelsepi, dataepi, 'Distribuição de Epidemias');
                                createPieChart(document.getElementById('ubspie').getContext('2d'), labelsubs, dataubs, 'Distribuição por UBS');
                                createPieChart(document.getElementById('logpie').getContext('2d'), labelslog, datalog, 'Distribuição por Logradouro');
                                createPieChart(document.getElementById('bairropie').getContext('2d'), labelsbairro, databairro, 'Distribuição por Bairro');
                                createPieChart(document.getElementById('datapie').getContext('2d'), labelsdata, datadata, 'Distribuição por Data');

                            } catch (error) {
                                console.error("Erro ao buscar dados:", error);
                            }
                        }

                        document.addEventListener('DOMContentLoaded', fetchDataAndCreateCharts);

                        </script>
                </div>
            </div>
        </main>
        
    });
});

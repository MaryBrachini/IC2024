@html.extend('layout', function(model) {
    @html.block('content', function(model) {
        <main style="text-align: center;">
            <div class="tabbable tabs-left" style="margin: 0 auto; width: 80%;">
                <div class="tab-content" style="padding: 20px;">
                    <h1>Relatório de Ocorrências</h1>
                    
                    @* OCORRENCIAS NOS PERIODOS PADRAO *@
                    <div>
                        <h4 style="padding-top: 20px;">Ocorrências no Período</h4>

                        <table class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>Últimos 15 Dias</th>
                                    <th>Último Mês</th>
                                    <th>Últimos 6 Meses</th>
                                    <th>Último Ano</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>@model.Ocorrenciasperiodo.quinzenal</td>
                                    <td>@model.Ocorrenciasperiodo.mensal</td>
                                    <td>@model.Ocorrenciasperiodo.semestral</td>
                                    <td>@model.Ocorrenciasperiodo.anual</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    @* FIM OCORRENCIAS NOS PERIODOS PADRAO *@

                   
                    @* LOCAL QUE RETORNA DADOS DO RELATORIO *@
                    <div>
                        <h4 style="padding-top: 20px;">Contagem de Ocorrências por Categoria</h4>

                        <div class="row mb-1" style="padding-top: 5px;">
                            <div class="col-4">
                                <h5>Epidemia</h5>
                                <table class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>Epidemia</th>
                                            <th>Quantidade</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @model.contagemEpidemiaArray.forEach(function(ocorrencia) {
                                            <tr>
                                                <td>@ocorrencia.Nomeepidemia</td>
                                                <td>@ocorrencia.epidemiacount</td>
                                            </tr>
                                        })
                                    </tbody>
                                </table>
                            </div>

                            <div class="col-4">
                                <h5>Unidade Básica de Saúde</h5>
                                <table class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>Uni. Básica de Saúde</th>
                                            <th>Quantidade</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @model.contagemPorUBSArray.forEach(function(ocorrencia) {
                                            <tr>
                                                <td>@ocorrencia.NomeUBS</td>
                                                <td>@ocorrencia.ubscount</td>
                                            </tr>
                                        })
                                    </tbody>
                                </table>
                            </div>

                            <div class="col-4">
                                <h5>Logradouro</h5>
                                <table class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>Logradouro</th>
                                            <th>Quantidade</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @model.contagemPorLogradouroArray.forEach(function(ocorrencia) {
                                            <tr>
                                                <td>@ocorrencia.Nomelogradouro</td>
                                                <td>@ocorrencia.logradourocount</td>
                                            </tr>
                                        })
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="row mb-1" style="padding-top: 5px;">
                            <div class="col-6">
                                <h5>Bairro</h5>
                                <table class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>Bairro</th>
                                            <th>Quantidade</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @model.contagemPorBairroArray.forEach(function(ocorrencia) {
                                            <tr>
                                                <td>@ocorrencia.Nomebairro</td>
                                                <td>@ocorrencia.bairrocount</td>
                                            </tr>
                                        })
                                    </tbody>
                                </table>
                            </div>

                            <div class="col-6">
                                <h5>Data da Ocorrência</h5>
                                <table class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>Data</th>
                                            <th>Quantidade</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @model.contagemPorDataArray.forEach(function(ocorrencia) {
                                            <tr>
                                                <td>@ocorrencia.dataOcorrencia</td>
                                                <td>@ocorrencia.dataOcorrenciacount</td>
                                            </tr>
                                        })
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    @* FIM LOCAL QUE RETORNA DADOS DO RELATORIO *@

                    @* GRAFICOS *@
                    <div style="padding-top: 20px;">
                        <h4>Gráficos de Ocorrências</h4>
                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos das Epidemias</h5>
                            <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="epibar" width="400" height="200"></canvas>                         
                            </div>

                            <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="epipie" style="width: 100%; height: 100%;"></canvas>                         
                            </div>

                        </div>
                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos das Unidade Básica de Saúde</h5>
                            <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="ubsbar" width="400" height="200"></canvas>                         
                            </div>

                             <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="ubspie" style="width: 100%; height: 100%;"></canvas>                         
                            </div>
                        </div>
                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos dos Logradouros</h5>
                            <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="logbar" width="400" height="200"></canvas>                         
                            </div>

                            <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="logpie" style="width: 100%; height: 100%;"></canvas>                         
                            </div>
                        </div>
                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos dos Bairros</h5>
                            <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="bairrobar" width="400" height="200"></canvas>                         
                            </div>

                            <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="bairropie" style="width: 100%; height: 100%;"></canvas>                         
                            </div>
                        </div>
                        
                        <div class="row mb-1" style="padding-top: 20px;">
                            <h5>Gráficos de Data da Ocorrência</h5>
                            <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="databar" width="400" height="200"></canvas>                         
                            </div>

                            <div class="col-6" style="width: 400px; height: 200px;">
                                <canvas id="datapie" style="width: 100%; height: 100%;"></canvas>                         
                            </div>
                        </div>
                    </div>
                    @* FIM GRAFICOS *@

                    @* SCRIP DOS GRAFICOS *@
                    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
                    <script>
                        document.addEventListener('DOMContentLoaded', fetchDataAndCreateCharts); 

                        let labelsEpidemia=[],dataEpidemia=[];
                        let labelsUBS=[], dataUBS=[];
                        let labelsLogradouro=[], dataLogradouro=[];
                        let labelsBairro=[],dataBairro=[];
                        let labelsDataO=[],dataDataO=[];

                        async function fetchDataAndCreateCharts() {

                            // Limpar variáveis
                            labelsEpidemia = [], dataEpidemia = [];
                            labelsUBS = [], dataUBS = [];
                            labelsLogradouro = [], dataLogradouro = [];
                            labelsBairro = [], dataBairro = [];
                            labelsDataO = [], dataDataO = [];

                            try {                            
                                const response = await axios.get('http://localhost:40000/relatorio/GetData');
                                console.log("Resposta completa:", response);
                                console.log("Response.data:", response.data);
                                
                                if (!response.data) {
                                    console.error("Dados não encontrados. Verifique a resposta do servidor.");
                                    return;
                                }

                                const {contagemEpidemiaArray2,contagemPorUBSArray2,contagemPorLogradouroArray2,
                                    contagemPorBairroArray2,contagemPorDataArray2} = response.data;                                       
                                                            
                                // Dados da API
                                const epidemia = Array.isArray(response.data.contagemEpidemiaArray2) ? response.data.contagemEpidemiaArray2 : [];
                                const ubs = Array.isArray(response.data.contagemPorUBSArray2) ? response.data.contagemPorUBSArray2 : [];
                                const logradouro = Array.isArray(response.data.contagemPorLogradouroArray2) ? response.data.contagemPorLogradouroArray2 : [];
                                const bairros = Array.isArray(response.data.contagemPorBairroArray2) ? response.data.contagemPorBairroArray2 : [];
                                const dataO = Array.isArray(response.data.contagemPorDataArray2) ? response.data.contagemPorDataArray2 : [];

                                /* console.log("epidemia:", epidemia);
                                console.log("ubs:", ubs);
                                console.log("logradouro:", logradouro);
                                console.log("bairros:", bairros);
                                console.log("dataO:", dataO); */
                                
                                // Processar Epidemias                               
                                labelsEpidemia = epidemia.map(ocorrencia => ocorrencia.Nomeepidemia);
                                dataEpidemia = epidemia.map(ocorrencia => ocorrencia.epidemiacount);

                                // Processar dados de UBS, Logradouro, Bairro e Data
                                labelsUBS = ubs.map(u => u.NomeUBS);
                                dataUBS = ubs.map(u => u.ubscount);

                                labelsLogradouro = logradouro.map(l => l.Nomelogradouro);
                                dataLogradouro = logradouro.map(l => l.logradourocount);

                                labelsBairro = bairros.map(b => b.Nomebairro);
                                dataBairro = bairros.map(b => b.bairrocount);

                                labelsDataO = dataO.map(d => d.dataOcorrencia);
                                dataDataO = dataO.map(d => d.dataOcorrenciacount);

                                    // Função para criar gráficos de barras
                                function createBarChart(ctx, labels, data, label) {
                                    console.log("Criando gráfico de barras", { labels, data, label });
                                    return new Chart(ctx, {
                                        type: 'bar',
                                        data: {
                                            labels: labels,
                                            datasets: [{
                                                label: label,
                                                data: data,
                                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                                borderColor: 'rgba(75, 192, 192, 1)',
                                                borderWidth: 1
                                            }]
                                        },
                                        options: {
                                            responsive: true,
                                            scales: {
                                                y: {
                                                    beginAtZero: true,
                                                    ticks: {
                                                        stepSize: 1
                                                    }
                                                }
                                            }
                                        }
                                    });
                                }
                                // Função para criar gráficos de pizza
                                function createPieChart(ctx, labels, data, label) {
                                    return new Chart(ctx, {
                                        type: 'pie',
                                        data: {
                                            labels: labels,
                                            datasets: [{
                                                label: label,
                                                data: data,
                                                backgroundColor: [
                                                    'rgba(255, 99, 132, 0.2)',
                                                    'rgba(54, 162, 235, 0.2)',
                                                    'rgba(255, 206, 86, 0.2)',
                                                    'rgba(75, 192, 192, 0.2)',
                                                    'rgba(153, 102, 255, 0.2)',
                                                    'rgba(255, 159, 64, 0.2)'
                                                ],
                                                borderColor: [
                                                    'rgba(255, 99, 132, 1)',
                                                    'rgba(54, 162, 235, 1)',
                                                    'rgba(255, 206, 86, 1)',
                                                    'rgba(75, 192, 192, 1)',
                                                    'rgba(153, 102, 255, 1)',
                                                    'rgba(255, 159, 64, 1)'
                                                ],
                                                borderWidth: 1
                                            }]
                                        },
                                        options: {
                                            responsive: true,
                                            plugins: {
                                                legend: {
                                                    position: 'top',
                                                }
                                            }
                                        }
                                    });
                                }

                                // Agora as variáveis estão definidas corretamente e podem ser passadas para os gráficos de pizza
                                createPieChart(document.getElementById('epipie').getContext('2d'), labelsEpidemia, dataEpidemia, 'Ocorrências de Epidemias');
                                createPieChart(document.getElementById('ubspie').getContext('2d'), labelsUBS, dataUBS, 'Ocorrências por UBS');
                                createPieChart(document.getElementById('logpie').getContext('2d'), labelsLogradouro, dataLogradouro, 'Ocorrências por Logradouro');
                                createPieChart(document.getElementById('bairropie').getContext('2d'), labelsBairro, dataBairro, 'Ocorrências por Bairro');
                                createPieChart(document.getElementById('datapie').getContext('2d'), labelsDataO, dataDataO, 'Ocorrências por Data');

                                // Agora as variáveis estão definidas corretamente e podem ser passadas para os gráficos de pizza
                                createBarChart(document.getElementById('epibar').getContext('2d'), labelsEpidemia, dataEpidemia, 'Ocorrências de Epidemias');
                                createBarChart(document.getElementById('ubsbar').getContext('2d'), labelsUBS, dataUBS, 'Ocorrências por UBS');
                                createBarChart(document.getElementById('logbar').getContext('2d'), labelsLogradouro, dataLogradouro, 'Ocorrências por Logradouro');
                                createBarChart(document.getElementById('bairrobar').getContext('2d'), labelsBairro, dataBairro, 'Ocorrências por Bairro');
                                createBarChart(document.getElementById('databar').getContext('2d'), labelsDataO, dataDataO, 'Ocorrências por Data');
                                    
                                } catch (error) {
                                    // Mostra o erro completo
                                    if (error.response) {
                                        // O servidor respondeu com um status code fora da faixa 2xx
                                        console.error('Erro no backend:', error.response.data);
                                        console.error('Status Code:', error.response.status);
                                    } else if (error.request) {
                                        // A requisição foi feita, mas não houve resposta
                                        console.error('Erro na requisição:', error.request);
                                    } else {
                                        // Erro desconhecido ao configurar a requisição
                                        console.error('Erro desconhecido:', error.message);
                                    }
                                }
                            }                             
                    </script>
                    @* FIM SCRIP DOS GRAFICOS *@

                </div>
            </div>
        </main>
    });
});

 <style>
        .period-button {
            padding: 10px 20px;
            margin: 5px;
            cursor: pointer;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 16px;
        }

        .period-button.selected {
            background-color: #0056b3;
        }
    </style>
